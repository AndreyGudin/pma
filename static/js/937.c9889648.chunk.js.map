{"version":3,"file":"static/js/937.c9889648.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/TaskItem/TaskItem.tsx","components/TasksList/TasksList.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React, { FC } from 'react';\nimport { Task } from '../../shared/interfaces';\nimport { Button, ButtonGroup, ListGroup } from 'react-bootstrap';\nimport { openModal } from '../../redux/modalSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\n\nexport const TaskItem: FC<Task> = (task) => {\n  const dispatch = useDispatch();\n  const {\n    users,\n    setting: { theme },\n  } = useSelector((state: RootState) => state);\n\n  const editHandler = (e: React.MouseEvent, task: Task) => {\n    e.stopPropagation();\n    dispatch(openModal({ name: 'editTask', data: task }));\n  };\n  const deleteHandler = (e: React.MouseEvent, task: Task) => {\n    e.stopPropagation();\n    dispatch(openModal({ name: 'remove', data: task }));\n  };\n  const infoHandler = (e: React.MouseEvent, task: Task) => {\n    e.stopPropagation();\n    dispatch(openModal({ name: 'infoTask', data: task }));\n  };\n\n  function defineName(userId: string) {\n    const user = users.all.filter((user) => user.id === userId);\n    if (user.length !== 0) {\n      return user[0].login;\n    }\n    return 'unknown';\n  }\n\n  return (\n    <ListGroup.Item variant={theme} className=\"w-100\" onClick={(e) => infoHandler(e, task)}>\n      <div className=\"row align-middle\">\n        <h6 className=\"col\">{task.title}</h6>\n        <ButtonGroup className=\"col float-right\">\n          <Button onClick={(e) => editHandler(e, task)} variant=\"secondary\" size=\"sm\">\n            <i className=\"bi-pencil\"></i>\n          </Button>\n          <Button onClick={(e) => deleteHandler(e, task)} variant=\"secondary\" size=\"sm\">\n            <i className=\"bi-trash\"></i>\n          </Button>\n        </ButtonGroup>\n      </div>\n      <div className=\"row p-2\">{task.description}</div>\n      <div className=\"row p-2\">{defineName(task.userId)}</div>\n    </ListGroup.Item>\n  );\n};\n","import { ColumnData, Task } from '../../shared/interfaces';\nimport { TaskItem } from '../TaskItem/TaskItem';\nimport { ReactSortable, SortableEvent } from 'react-sortablejs';\nimport { useState } from 'react';\nimport { editTask, getTaskById } from '../../services/task.service';\n\nconst TasksList = (props: { data: ColumnData }) => {\n  const { data } = props;\n  const [tasks, setTasks] = useState<Task[]>(data.tasks.sort((a, b) => a.order! - b.order!));\n\n  const onSortEnd = ({ from, to, oldIndex, newIndex }: SortableEvent) => {\n    const { boardId, id: taskId } = tasks[oldIndex!];\n    getTaskById(boardId!, from.id, taskId).then(({ data }) => {\n      const next = {\n        ...data,\n        columnId: to.id,\n        order: newIndex! + 1,\n      };\n      editTask(data, next);\n    });\n  };\n\n  return (\n    <ReactSortable\n      list={tasks}\n      setList={setTasks}\n      onEnd={onSortEnd}\n      animation={200}\n      delayOnTouchOnly={true}\n      delay={2}\n      group=\"shared\"\n      className=\"list-group shadow-sm\"\n      id={data.id}\n    >\n      {tasks.map((task) => (\n        <TaskItem {...task} key={task.id} />\n      ))}\n    </ReactSortable>\n  );\n};\n\nexport default TasksList;\n"],"names":["ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","className","variant","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","TaskItem","task","dispatch","useDispatch","useSelector","state","users","theme","setting","e","openModal","name","data","infoHandler","title","ButtonGroup","Button","editHandler","size","deleteHandler","description","userId","user","all","filter","id","length","login","defineName","useState","tasks","sort","a","b","order","setTasks","ReactSortable","list","setList","onEnd","from","to","oldIndex","newIndex","boardId","taskId","getTaskById","then","next","columnId","editTask","animation","delayOnTouchOnly","delay","group","map"],"sourceRoot":""}