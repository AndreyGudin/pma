{"version":3,"file":"static/js/738.9f44e68f.chunk.js","mappings":"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","sources":["components/BoardItem/BoardItem.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React, { FC } from 'react';\nimport { Board } from '../../shared/interfaces';\nimport { Button, ButtonGroup, Card } from 'react-bootstrap';\nimport { openModal } from '../../redux/modalSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { useNavigate } from 'react-router-dom';\n\nconst BoardItem: FC<Board> = (board) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    setting: { theme },\n  } = useSelector((state: RootState) => state);\n\n  const openBoard = (boardId: string) => {\n    navigate(`/user/board/${boardId}`);\n  };\n\n  const removeHandler = (e: React.MouseEvent, board: Board) => {\n    e.stopPropagation();\n    dispatch(openModal({ name: 'remove', data: board }));\n  };\n\n  const editHandler = (e: React.MouseEvent, board: Board) => {\n    e.stopPropagation();\n    dispatch(openModal({ name: 'editBoard', data: board }));\n  };\n\n  return (\n    <Card\n      style={{ width: '20rem' }}\n      className=\"col-2 p-0 shadow\"\n      onClick={() => openBoard(board.id!)}\n      bg={theme}\n      text={theme === 'dark' ? 'white' : 'dark'}\n    >\n      <Card.Header>\n        <div className=\"row\">\n          <Card.Title className=\"col\">{board.title}</Card.Title>\n          <ButtonGroup className=\"col float-right\" size=\"sm\">\n            <Button\n              className=\"bi-pencil text-success\"\n              variant=\"link\"\n              onClick={(e) => editHandler(e, board)}\n            />\n            <Button\n              className=\"bi-trash text-danger\"\n              variant=\"link\"\n              onClick={(e) => removeHandler(e, board)}\n            />\n          </ButtonGroup>\n        </div>\n      </Card.Header>\n      <Card.Body>\n        <Card.Text>{board.description}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default BoardItem;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["board","dispatch","useDispatch","navigate","useNavigate","theme","useSelector","state","setting","style","width","className","onClick","boardId","id","bg","text","title","size","variant","e","stopPropagation","openModal","name","data","editHandler","removeHandler","description","CardImg","React","ref","bsPrefix","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}