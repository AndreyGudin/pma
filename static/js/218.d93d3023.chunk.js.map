{"version":3,"file":"static/js/218.d93d3023.chunk.js","mappings":"4MAAaA,EAAe,CAC1B,CACEC,KAAM,YACNC,KAAM,YACNC,MAAO,gBAET,CACEF,KAAM,SACNC,KAAM,WACNC,MAAO,gB,SC8CX,EA9C6B,SAACC,GAC5B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEJC,GACTC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,CAAK,IADzCC,QAAWH,MAYb,OACE,UAACI,EAAA,EAAI,CACHC,MAAO,CAAEC,MAAO,SAChBC,UAAU,mBACVC,QAAS,kBAbMC,EAaUd,EAAMe,QAZjCZ,EAAS,eAAD,OAAgBW,IADR,IAACA,CAaoB,EACnCE,GAAIX,EACJY,KAAgB,SAAVZ,EAAmB,QAAU,OAAO,WAE1C,SAACI,EAAA,SAAW,WACV,iBAAKG,UAAU,MAAK,WAClB,SAACH,EAAA,QAAU,CAACG,UAAU,MAAK,SAAEZ,EAAMkB,SACnC,SAACC,EAAA,EAAW,CAACP,UAAU,kBAAkBQ,KAAK,KAAI,SAC/CxB,EAAayB,KAAI,gBAAGxB,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAK,OACpC,SAACuB,EAAA,EAAM,CAELV,UAAS,UAAKd,EAAI,YAAIC,GACtBwB,QAAQ,OACRV,QAAS,SAACW,GAAC,OAtBH,SAACA,EAAe3B,EAAcG,GAClDwB,EAAEC,kBACFxB,GAASyB,EAAAA,EAAAA,IAAU,CAAE7B,KAAMA,EAAM8B,KAAM3B,IACzC,CAmB8B4B,CAAcJ,EAAG3B,EAAMG,EAAM,GAHxCH,EAIL,YAKV,SAACY,EAAA,OAAS,WACR,SAACA,EAAA,OAAS,UAAET,EAAM6B,kBAI1B,C","sources":["components/BoardItem/ButtonItem.buttons.tsx","components/BoardItem/BoardItem.tsx"],"sourcesContent":["export const BoardButtons = [\n  {\n    name: 'editBoard',\n    icon: 'bi-pencil',\n    color: 'text-success',\n  },\n  {\n    name: 'remove',\n    icon: 'bi-trash',\n    color: 'text-danger',\n  },\n];\n","import { FC, MouseEvent } from 'react';\nimport { Board } from '../../shared/interfaces';\nimport { Button, ButtonGroup, Card } from 'react-bootstrap';\nimport { openModal } from '../../redux/modalSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { useNavigate } from 'react-router-dom';\nimport { BoardButtons } from './ButtonItem.buttons';\n\nconst BoardItem: FC<Board> = (board) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    setting: { theme },\n  } = useSelector((state: RootState) => state);\n\n  const openBoard = (boardId: string) => {\n    navigate(`/user/board/${boardId}`);\n  };\n\n  const buttonHandler = (e: MouseEvent, name: string, board: Board) => {\n    e.stopPropagation();\n    dispatch(openModal({ name: name, data: board }));\n  };\n\n  return (\n    <Card\n      style={{ width: '20rem' }}\n      className=\"col-2 p-0 shadow\"\n      onClick={() => openBoard(board.id!)}\n      bg={theme}\n      text={theme === 'dark' ? 'white' : 'dark'}\n    >\n      <Card.Header>\n        <div className=\"row\">\n          <Card.Title className=\"col\">{board.title}</Card.Title>\n          <ButtonGroup className=\"col float-right\" size=\"sm\">\n            {BoardButtons.map(({ name, icon, color }) => (\n              <Button\n                key={name}\n                className={`${icon} ${color}`}\n                variant=\"link\"\n                onClick={(e) => buttonHandler(e, name, board)}\n              />\n            ))}\n          </ButtonGroup>\n        </div>\n      </Card.Header>\n      <Card.Body>\n        <Card.Text>{board.description}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default BoardItem;\n"],"names":["BoardButtons","name","icon","color","board","dispatch","useDispatch","navigate","useNavigate","theme","useSelector","state","setting","Card","style","width","className","onClick","boardId","id","bg","text","title","ButtonGroup","size","map","Button","variant","e","stopPropagation","openModal","data","buttonHandler","description"],"sourceRoot":""}