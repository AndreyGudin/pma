{"version":3,"file":"static/js/611.c30ed7bf.chunk.js","mappings":"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","sources":["components/EditColumn/EditColumn.tsx","components/ColumnItem/ColumnItem.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React from 'react';\nimport { FC } from 'react';\nimport { Alert, Button } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { closeModal, resetModal } from '../../redux/modalSlice';\nimport { RootState } from '../../redux/store';\nimport { editColumn } from '../../services/column.service';\nimport { Board, Column } from '../../shared/interfaces';\nimport { useTranslation } from 'react-i18next';\n\nexport const EditColumn: FC = () => {\n  const { data } = useSelector((state: RootState) => state.modal);\n  const { id, title, order } = data as Column;\n  const { t } = useTranslation();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm<Board>({ mode: 'all' });\n\n  const dispatch = useDispatch();\n\n  function columnData(column: Column) {\n    const newData: Column = {\n      ...data,\n      title: column.title,\n      order: order,\n    };\n    if (id) {\n      editColumn(newData).then(() => {\n        dispatch(resetModal());\n      });\n    }\n  }\n\n  return (\n    <div className=\"col\">\n      <form className=\"d-flex align-items-center gap-1\" onSubmit={handleSubmit(columnData)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            {...register('title', { required: true })}\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            defaultValue={title}\n          />\n        </div>\n        {errors.title?.type === 'required' && (\n          <Alert variant=\"warning\">{t('editColumn.titleRequired')}</Alert>\n        )}\n        <Button\n          size=\"sm\"\n          type=\"submit\"\n          variant=\"success\"\n          className=\"bi-check-lg text-light\"\n          disabled={!isValid}\n        ></Button>\n        <Button\n          size=\"sm\"\n          variant=\"warning\"\n          className=\"bi-x-lg text-light\"\n          onClick={() => dispatch(closeModal('editColumn'))}\n        ></Button>\n      </form>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Button, ButtonGroup, Card } from 'react-bootstrap';\nconst TasksList = React.lazy(() => import('../TasksList/TasksList'));\nimport { Column, ColumnData } from '../../shared/interfaces';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport { openModal } from '../../redux/modalSlice';\nimport { EditColumn } from '../EditColumn/EditColumn';\n\nconst ColumnItem: FC<ColumnData> = (columnData) => {\n  const dispatch = useDispatch();\n  const {\n    modal: { visible, data },\n    setting: { theme, maxHeight },\n  } = useSelector((state: RootState) => state);\n\n  const editColumnHandler = (e: React.MouseEvent, column: Column) => {\n    e.stopPropagation();\n    dispatch(openModal({ name: 'editColumn', data: column }));\n  };\n\n  const removeColumnHandler = (e: React.MouseEvent, column: Column) => {\n    e.stopPropagation();\n    dispatch(openModal({ name: 'remove', data: column }));\n  };\n\n  const addTaskHandler = (e: React.MouseEvent, column: Column) => {\n    e.stopPropagation();\n    dispatch(\n      openModal({\n        name: 'addTask',\n        data: { boardId: column.boardId, columnId: column.id, title: '' },\n      })\n    );\n  };\n\n  return (\n    <Card\n      className=\"flex-grow-0 flex-shrink-0 shadow-sm\"\n      style={{ width: '20rem', height: 'fit-content' }}\n      bg={theme}\n      text={theme === 'dark' ? 'white' : 'dark'}\n    >\n      <Card.Header className=\"gap-3\">\n        <div className=\"row\">\n          {visible.editColumn && data?.id === columnData.column.id ? (\n            <EditColumn />\n          ) : (\n            <Card.Title\n              onClick={(e: React.MouseEvent) => editColumnHandler(e, columnData.column)}\n              className=\"col\"\n            >\n              {columnData.column.title}\n            </Card.Title>\n          )}\n\n          <ButtonGroup className=\"col-4 float-right\" size=\"sm\">\n            <Button\n              className=\"bi-plus-circle text-primary\"\n              variant=\"link\"\n              onClick={(e) => addTaskHandler(e, columnData.column)}\n            />\n            <Button\n              className=\"bi-trash text-danger\"\n              variant=\"link\"\n              onClick={(e) => removeColumnHandler(e, columnData.column)}\n            />\n          </ButtonGroup>\n        </div>\n      </Card.Header>\n      <Card.Body\n        style={{ maxHeight: `${maxHeight - 52}px` }}\n        className=\"d-flex w-100 h-auto flex-column flex-grow-0 flex-shrink-0 gap-3 overflow-auto\"\n      >\n        {<TasksList data={columnData} />}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ColumnItem;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["EditColumn","data","useSelector","state","modal","id","title","order","t","useTranslation","useForm","mode","register","handleSubmit","formState","errors","isValid","dispatch","useDispatch","className","onSubmit","column","newData","editColumn","then","resetModal","required","type","name","defaultValue","Alert","variant","Button","size","disabled","onClick","closeModal","TasksList","React","columnData","visible","setting","theme","maxHeight","Card","style","width","height","bg","text","e","stopPropagation","openModal","editColumnHandler","ButtonGroup","boardId","columnId","addTaskHandler","removeColumnHandler","CardImg","ref","bsPrefix","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}